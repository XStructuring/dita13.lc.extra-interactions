<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"> 
    <xs:annotation>
        <xs:appinfo>
            <dita:domainsModule xmlns:dita="http://dita.oasis-open.org/architecture/2005/">(topic learningInteractionBase2-d lcelcegapmatch-d)</dita:domainsModule>
        </xs:appinfo>
    </xs:annotation>
    
    <xs:group name="lcegapmatch-d-ph">
        <xs:sequence>
            <xs:choice>
                <xs:element ref="lceGap"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>
    
    <xs:group name="lceGapMatch">
        <xs:sequence>
            <xs:choice>
                <xs:element ref="lceGapMatch"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>
    
    <xs:group name="lceGapMap">
        <xs:sequence>
            <xs:choice>
                <xs:element ref="lceGapMap"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>
    
    <xs:group name="lceGap">
        <xs:sequence>
            <xs:choice>
                <xs:element ref="lceGap"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>
    
    <xs:group name="lceGapAnswer">
        <xs:sequence>
            <xs:choice>
                <xs:element ref="lceGapAnswer"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>
    
    <xs:group name="lceGapContent">
        <xs:sequence>
            <xs:choice>
                <xs:element ref="lceGapContent"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>

<!-- ============================================================= -->
    
    <xs:element name="lceGapMatch">
        <xs:annotation>
            <xs:documentation>
                A lceGapMatch is an textual interaction where the sudent has to drag and drop a word (or phrase) to a gap in a text. 
                To make it more difficult more drop text can be given than gaps appear in the text.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="lceGapMatch.class">
                    <xs:attribute ref="class"
                        default="+ topic/div learningInteractionBase2-d/lcInteractionBase2 lcegapmatch-d/lceGapMatch "/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="lceGapMatch.class">
        <xs:sequence>
            <xs:group ref="lceGapMatch.content"/>
        </xs:sequence>
        <xs:attributeGroup ref="lceGapMatch.attributes"/>
    </xs:complexType>
    <xs:group name="lceGapMatch.content">
        <xs:sequence>
            <xs:group ref="lcInteractionLabel2" minOccurs="0"/>
            <xs:group ref="lcQuestion2"/>
            <xs:group ref="lceInlineInteractionText"/>
            <xs:group ref="lceGapMap"/>
            <xs:group ref="lcFeedbackIncorrect2" minOccurs="0"/>
            <xs:group ref="lcFeedbackCorrect2" minOccurs="0"/>
            <xs:group ref="data" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:group>
    <xs:attributeGroup name="lceGapMatch.attributes">
        <xs:attribute name="id" type="xs:NMTOKEN"/>
        <xs:attributeGroup ref="conref-atts"/>
        <xs:attributeGroup ref="select-atts"/>
        <xs:attributeGroup ref="localization-atts"/>
        <xs:attribute name="outputclass" type="xs:string"/>
        <xs:attributeGroup ref="global-atts"/>
    </xs:attributeGroup>
    
    <xs:element name="lceGapMap">
        <xs:annotation>
            <xs:documentation>A lceGapMap contains the response options for the gaps</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="lceGapMap.class">
                    <xs:attribute ref="class"
                        default="+ topic/div learningInteractionBase2-d/div lcegapmatch-d/lceGapMap "/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="lceGapMap.class">
        <xs:sequence>
            <xs:group ref="lceGapMap.content"/>
        </xs:sequence>
        <xs:attributeGroup ref="lceGapMap.attributes"/>
    </xs:complexType>
    <xs:group name="lceGapMap.content">
        <xs:sequence>
            <xs:group ref="lceGapAnswer" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:group>
    <xs:attributeGroup name="lceGapMap.attributes">
        <xs:attributeGroup ref="univ-atts"/>
        <xs:attribute name="outputclass" type="xs:string"/>
        <xs:attributeGroup ref="global-atts"/>
    </xs:attributeGroup>
    
    <xs:element name="lceGapAnswer">
        <xs:annotation>
            <xs:documentation>A lceGapAnswer defines an answer, which can be linked to a gap. </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="lceGapAnswer.class">
                    <xs:attribute ref="class"
                        default="+ topic/div learningInteractionBase2-d/div lcegapmatch-d/lceGapAnswer "/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="lceGapAnswer.class">
        <xs:sequence>
            <xs:group ref="lceGapAnswer.content"/>
        </xs:sequence>
        <xs:attributeGroup ref="lceGapAnswer.attributes"/>
    </xs:complexType>
    <xs:group name="lceGapAnswer.content">
        <xs:sequence>
            <xs:group ref="lceGapContent"/>
            <xs:group ref="lcCorrectResponse2" minOccurs="0"/>
            <xs:group ref="lcFeedback2" minOccurs="0"/>
        </xs:sequence>
    </xs:group>
    <xs:attributeGroup name="lceGapAnswer.attributes">
        <xs:attribute name="href" type="xs:string"/>
        <xs:attributeGroup ref="univ-atts"/>
        <xs:attribute name="outputclass" type="xs:string"/>
        <xs:attributeGroup ref="global-atts"/>
    </xs:attributeGroup>
    
    <xs:element name="lceGapContent">
        <xs:annotation>
            <xs:documentation>A lceGapContent defines the content of the gap </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="lceGapContent.class">
                    <xs:attribute ref="class"
                        default="+ topic/p learningInteractionBase2-d/p lcegapmatch-d/lceGapContent "/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="lceGapContent.class" mixed="true">
        <xs:sequence>
            <xs:group ref="lceGapContent.content"/>
        </xs:sequence>
        <xs:attributeGroup ref="lceGapContent.attributes"/>
    </xs:complexType>
    <xs:group name="lceGapContent.content">
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="basic.ph" minOccurs="0"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>
    <xs:attributeGroup name="lceGapContent.attributes">
        <xs:attribute name="outputclass" type="xs:string"/>
        <xs:attributeGroup ref="univ-atts"/>
        <xs:attributeGroup ref="global-atts"/>
    </xs:attributeGroup>
    
    <xs:element name="lceGap">
        <xs:annotation>
            <xs:documentation>A gap is a placeholder which must be linked by an gap answer</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="lceGap.class">
                    <xs:attribute ref="class"
                        default="+ topic/ph learningInteractionBase2-d/ph lcegapmatch-d/lceGap "/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="lceGap.class">
        <xs:sequence>
            <xs:group ref="lceGap.content"/>
        </xs:sequence>
        <xs:attributeGroup ref="lceGap.attributes"/>
    </xs:complexType>
    <xs:group name="lceGap.content">
        <xs:sequence/>
    </xs:group>
    <xs:attributeGroup name="lceGap.attributes">
        <xs:attribute name="id" type="xs:NMTOKEN" use="required"/>
        <xs:attributeGroup ref="conref-atts"/>
        <xs:attributeGroup ref="select-atts"/>
        <xs:attributeGroup ref="localization-atts"/>
        <xs:attribute name="outputclass" type="xs:string"/>
        <xs:attributeGroup ref="global-atts"/>
    </xs:attributeGroup>
    
</xs:schema>
